const mongoose = require('mongoose')
const mediaSchema = mongoose.Schema({
  filename: {type: String, required: true},
  media_type: {type: String, required: true},  // photo or video
  size: { type: Number, required: true},
  url: {type: String, required: true},
  tags: [{type: String}],
  create_date: {type: Date},
  favorites: [{ type: mongoose.Schema.ObjectId, ref: 'Users' }]
})

var Media = module.exports = mongoose.model('Media', mediaSchema)

module.exports.index = function (callback, limit) {
  Media.find(callback).limit(limit)
}

// Get
module.exports.get = function (id, populate, callback) {
  Media.findById(id, function (err, results) {
    Media.populate(results, {path: 'Users'}, callback)
  })
}

// setFavorite
module.exports.setFavorite = function (mediaId, userId, callback) {
  Media.update({ _id: mediaId }, { $addToSet: { favorites: userId } }, callback)
}

// clearFavorite
module.exports.clearFavorite = function (mediaId, userId, callback) {
  Media.update({ _id: mediaId }, { $pull: { favorites: userId } }, callback)
}

// Search
module.exports.search = function (search, callback) {
  const regExp = new RegExp(search, 'i')
  const searchArray =  [{filename: regExp}, {media_type: regExp}, {tags: regExp}, {url: regExp}]
  Media.find({'$or': searchArray}).exec(callback)
}

// Post
module.exports.post = function (media, callback) {
  Media.create(media, callback)
}

// Delete
module.exports.delete = function (id, callback) {
  if (id.match(/^[0-9a-fA-F]{24}$/)) {
    Media.findByIdAndRemove(id, callback)
  } else {
    callback(new Error(`Invalid Media Id: ${id}`), null)
  }
} 